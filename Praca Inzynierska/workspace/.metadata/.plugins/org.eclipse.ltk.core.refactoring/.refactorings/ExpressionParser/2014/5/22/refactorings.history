<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename type &apos;main.parser.operators.Operators&apos; to &apos;OperatorsOperations&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.operators.Operators&apos;&#x0D;&#x0A;- Renamed element: &apos;main.parser.operators.OperatorsOperations&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Operators&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;main.parser.operators{Operators.java[Operators" matchStrategy="1" name="OperatorsOperations" qualified="false" references="true" similarDeclarations="false" stamp="1401084114393" textual="false" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;org.fcl.main.variable.Term.name&apos; in &apos;org.fcl.main.variable.Term&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;org.fcl.main.variable.Term.name&apos;&#x0D;&#x0A;- Getter method name: &apos;getName&apos;&#x0D;&#x0A;- Setter method name: &apos;setName&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;name&apos;" flags="589830" getter="getName" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;org.fcl.main.variable{Term.java[Term^name" insertion="1" setter="setName" stamp="1401087806667" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;org.fcl.main.variable.misc.Point.x&apos; in &apos;org.fcl.main.variable.misc.Point&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;org.fcl.main.variable.misc.Point.x&apos;&#x0D;&#x0A;- Getter method name: &apos;getX&apos;&#x0D;&#x0A;- Setter method name: &apos;setX&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;x&apos;" flags="589830" getter="getX" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;org.fcl.main.variable.misc{Point.java[Point^x" insertion="-1" setter="setX" stamp="1401088755893" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;org.fcl.main.variable.misc.Point.y&apos; in &apos;org.fcl.main.variable.misc.Point&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;org.fcl.main.variable.misc.Point.y&apos;&#x0D;&#x0A;- Getter method name: &apos;getY&apos;&#x0D;&#x0A;- Setter method name: &apos;setY&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;y&apos;" flags="589830" getter="getY" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;org.fcl.main.variable.misc{Point.java[Point^y" insertion="1" setter="setY" stamp="1401088759355" version="1.0" visibility="1"/>&#x0A;&#x0A;<refactoring comment="Rename field &apos;pointList&apos; in &apos;org.fcl.main.functionblock.FuzzyMath.createTermFromPoints(...).new Term() {...}&apos; to &apos;p&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;org.fcl.main.functionblock.FuzzyMath.createTermFromPoints(...).new Term() {...}.pointList&apos;&#x0D;&#x0A;- Renamed element: &apos;org.fcl.main.functionblock.FuzzyMath.createTermFromPoints(...).new Term() {...}.p&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;pointList&apos;" flags="851974" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;org.fcl.main.functionblock{FuzzyMath.java[FuzzyMath~createTermFromPoints~QString;~\[QPoint;[^pointList" name="p" references="true" setter="false" stamp="1401091788816" textual="false" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;org.fcl.main.variable.Term.min&apos; in &apos;org.fcl.main.variable.Term&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;org.fcl.main.variable.Term.min&apos;&#x0D;&#x0A;- Getter method name: &apos;getMin&apos;&#x0D;&#x0A;- Setter method name: &apos;setMin&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;min&apos;" flags="589830" getter="getMin" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;org.fcl.main.variable{Term.java[Term^min" insertion="6" setter="setMin" stamp="1401132816624" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;org.fcl.main.variable.Term.max&apos; in &apos;org.fcl.main.variable.Term&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;org.fcl.main.variable.Term.max&apos;&#x0D;&#x0A;- Getter method name: &apos;getMax&apos;&#x0D;&#x0A;- Setter method name: &apos;setMax&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;max&apos;" flags="589830" getter="getMax" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;org.fcl.main.variable{Term.java[Term^max" insertion="8" setter="setMax" stamp="1401132820315" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Rename method &apos;org.fcl.main.functionblock.MainFuzzySettings.getTermFactoriesOperators()&apos; to &apos;getTermFactoriesOperatorsArray&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;org.fcl.main.functionblock.MainFuzzySettings.getTermFactoriesOperators()&apos;&#x0D;&#x0A;- Renamed element: &apos;org.fcl.main.functionblock.MainFuzzySettings.getTermFactoriesOperatorsArray()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getTermFactoriesOperators&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;org.fcl.main.functionblock{MainFuzzySettings.java[MainFuzzySettings~getTermFactoriesOperators" name="getTermFactoriesOperatorsArray" references="true" stamp="1401137153000" version="1.0"/>&#x0A;<refactoring comment="Move 3 packages to &apos;JFuzzyControlLanguage/src&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Destination element: &apos;JFuzzyControlLanguage/src&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     ExpressionParser/src/org.fcl.main.variable&#x0D;&#x0A;     ExpressionParser/src/org.fcl.main.functionblock&#x0D;&#x0A;     ExpressionParser/src/org.fcl.main.variable.misc&#x0D;&#x0A;- Update references to refactored element" description="Move packages" destination="=JFuzzyControlLanguage/src" element1="/src&lt;org.fcl.main.variable" element2="/src&lt;org.fcl.main.functionblock" element3="/src&lt;org.fcl.main.variable.misc" flags="589830" fragments="3" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.movePackages" stamp="1401191509538" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;arg0&apos; in &apos;main.parser.variables.VariableList.add(...)&apos; to &apos;variable&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.variables.VariableList.add(Variable).arg0&apos;&#x0D;&#x0A;- Renamed element: &apos;arg0&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;arg0&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;main.parser.variables{VariableList.java[VariableList~add~QVariable;@arg0!602!614!611!614!QVariable;!0!true" name="variable" references="true" stamp="1401216407368" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;args&apos; in &apos;main.parser.variables.VariableList.setValueOf(...)&apos; to &apos;variableName&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.variables.VariableList.setValueOf(Object, Object).args&apos;&#x0D;&#x0A;- Renamed element: &apos;args&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;args&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;main.parser.variables{VariableList.java[VariableList~setValueOf~QObject;~QObject;@args!1468!1478!1475!1478!QObject;!0!true" name="variableName" references="true" stamp="1401217465004" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;args2&apos; in &apos;main.parser.variables.VariableList.setValueOf(...)&apos; to &apos;variableValue&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.variables.VariableList.setValueOf(Object, Object).args2&apos;&#x0D;&#x0A;- Renamed element: &apos;args2&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;args2&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;main.parser.variables{VariableList.java[VariableList~setValueOf~QObject;~QObject;@args2!1489!1500!1496!1500!QObject;!0!true" name="variableValue" references="true" stamp="1401217479063" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;varName&apos; in &apos;main.parser.variables.VariableList.makeDouble(...)&apos; to &apos;object&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.variables.VariableList.makeDouble(Object).varName&apos;&#x0D;&#x0A;- Renamed element: &apos;varName&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;varName&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;main.parser.variables{VariableList.java[VariableList~makeDouble~QObject;@varName!2106!2119!2113!2119!QObject;!0!true" name="object" references="true" stamp="1401219476939" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;args&apos; in &apos;main.parser.variables.VariableList.getString(...)&apos; to &apos;object&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.variables.VariableList.getString(Object).args&apos;&#x0D;&#x0A;- Renamed element: &apos;args&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;args&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;main.parser.variables{VariableList.java[VariableList~getString~QObject;@args!2721!2731!2728!2731!QObject;!0!true" name="object" references="true" stamp="1401219715261" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;main.parser.operators.StandardMathOperators&apos; to &apos;StandardMathOperatorsSet&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.operators.StandardMathOperators&apos;&#x0D;&#x0A;- Renamed element: &apos;main.parser.operators.StandardMathOperatorsSet&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;StandardMathOperators&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;main.parser.operators{StandardMathOperators.java[StandardMathOperators" matchStrategy="1" name="StandardMathOperatorsSet" qualified="false" references="true" similarDeclarations="false" stamp="1401263952185" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;main.parser.operators.LinguisticOperators&apos; to &apos;LinguisticOperatorsSet&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.operators.LinguisticOperators&apos;&#x0D;&#x0A;- Renamed element: &apos;main.parser.operators.LinguisticOperatorsSet&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;LinguisticOperators&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;main.parser.operators{LinguisticOperators.java[LinguisticOperators" matchStrategy="1" name="LinguisticOperatorsSet" qualified="false" references="true" similarDeclarations="false" stamp="1401263960087" textual="false" version="1.0"/>&#x0A;&#x0A;<refactoring comment="Rename method &apos;main.parser.ExpressionParser.setOperators(...)&apos; to &apos;setOperatorsSet&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.ExpressionParser.setOperators(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;main.parser.ExpressionParser.setOperatorsSet(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;setOperators&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;main.parser{ExpressionParser.java[ExpressionParser~setOperators~QOperatorSet;" name="setOperatorsSet" references="true" stamp="1401270221901" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;StandardMathOperatorsSet.java&apos; to &apos;ExpressionParser/src/main.parser&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Destination element: &apos;ExpressionParser/src/main.parser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.operators.StandardMathOperatorsSet.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;main.parser" element1="/src&lt;main.parser.operators{StandardMathOperatorsSet.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1401270682265" units="1" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;LinguisticOperatorsSet.java&apos; to &apos;ExpressionParser/src/main.parser&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Destination element: &apos;ExpressionParser/src/main.parser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.operators.LinguisticOperatorsSet.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;main.parser" element1="/src&lt;main.parser.operators{LinguisticOperatorsSet.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1401270695332" units="1" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;main.parser.operators.Operator&apos; to &apos;AbstractOperator&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.operators.Operator&apos;&#x0D;&#x0A;- Renamed element: &apos;main.parser.operators.AbstractOperator&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;Operator&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;main.parser.operators{Operator.java[Operator" matchStrategy="1" name="AbstractOperator" qualified="false" references="true" similarDeclarations="false" stamp="1401271237124" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename type &apos;main.parser.operators.DoubleMathOperator&apos; to &apos;AbstractDoubleOperator&apos;&#x0D;&#x0A;- Original project: &apos;ExpressionParser&apos;&#x0D;&#x0A;- Original element: &apos;main.parser.operators.DoubleMathOperator&apos;&#x0D;&#x0A;- Renamed element: &apos;main.parser.operators.AbstractDoubleOperator&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename type &apos;DoubleMathOperator&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.type" input="/src&lt;main.parser.operators{DoubleMathOperator.java[DoubleMathOperator" matchStrategy="1" name="AbstractDoubleOperator" qualified="false" references="true" similarDeclarations="false" stamp="1401271248517" textual="false" version="1.0"/>
</session>