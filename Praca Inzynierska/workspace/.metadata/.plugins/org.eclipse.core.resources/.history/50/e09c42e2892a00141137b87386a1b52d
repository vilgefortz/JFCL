package formframe;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;

import javax.swing.JButton;
import javax.swing.JFrame;



public class FormFrame {
	public static void main (String [] args) {//test
		JFrame f = new JFrame();
		
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		f.setSize(new Dimension(300,400));
		f.setVisible(true);
		Patient p = patientEditForm (f);
	}
	protected FormFrame () {
		
	}
	
	private static boolean patientCreated = false;
	private static Patient p ; // tu oczywiscie swoja klase pacjenta
	//metoda pokazuje frame z polami do uzupelnienia w celu dodania pacjenta, zwraca obiekt klasy pacjenta
	public static Patient patientEditForm (JFrame parent) {
		patientCreated=false;
		final JFrame frame = new JFrame ();
		//dodajesz pola tekstowe do formatki, ustalasz rozmiar itepe
		frame.setSize(new Dimension (200,100));
		
		
		//////////
		frame.addFocusListener(new FocusListener() {
			
			@Override
			public void focusLost(FocusEvent e) {
				frame.requestFocus();	
			}
			
			@Override
			public void focusGained(FocusEvent e) {
				
			}
		});
		JButton ok = new JButton ("OK");
		JButton cancel = new JButton ("cancel");
		ok.addActionListener(new ActionListener () {

			@Override
			public void actionPerformed(ActionEvent e) {
				p=new Patient();
				//TUTAJ ZBIERASZ INFORMACJE Z POL TEKSTOWYCH, SPRAWDZASZ JE, USTAWIASZ formOK na true jesli jest ok
				//ustawiasz odpowiednio pola w obiekcie p i patientCreated na true
				
			}
		});
		cancel.addActionListener(new ActionListener () {

			@Override
			public void actionPerformed(ActionEvent e) {
				p=null; //jesli ktos nie chce wprowadzic pacjenta to metoda zwroci null
				patientCreated=true;
			}
			
		});
		frame.add(ok);
		frame.add(cancel);
		frame.setVisible(true);
		while (!patientCreated);
		frame.dispose();
		return p;
	}
}
